{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.route.ts","webpack:///./src/app/app/app.component.css","webpack:///./src/app/app/app.component.html","webpack:///./src/app/app/app.component.ts","webpack:///./src/app/convert-date.pipe.ts","webpack:///./src/app/find-task-by-id.pipe.ts","webpack:///./src/app/find-task-by-task.pipe.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/task/add/add.component.css","webpack:///./src/app/task/add/add.component.html","webpack:///./src/app/task/add/add.component.ts","webpack:///./src/app/task/model/Task.ts","webpack:///./src/app/task/task.service.ts","webpack:///./src/app/task/update/update.component.css","webpack:///./src/app/task/update/update.component.html","webpack:///./src/app/task/update/update.component.ts","webpack:///./src/app/task/view/view.component.css","webpack:///./src/app/task/view/view.component.html","webpack:///./src/app/task/view/view.component.ts","webpack:///./src/app/util.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AppComponent } from './app/app.component';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { routing } from './app.route';\r\nimport { HttpClientModule } from '../../node_modules/@angular/common/http';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AddComponent } from './task/add/add.component';\r\nimport { ViewComponent } from './task/view/view.component';\r\nimport { UpdateComponent } from './task/update/update.component';\r\nimport { FindTaskByIdPipe } from './find-task-by-id.pipe';\r\nimport { FindTaskByTaskPipe } from './find-task-by-task.pipe';\r\nimport { DatePipe } from '@angular/common';\r\nimport { NgbDatepickerConfig, NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbDateFRParserFormatter } from \"./convert-date.pipe\"\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule, BrowserModule, FormsModule, routing, HttpClientModule, NgbModule\r\n  ],\r\n  //providers: [DatePipe,{provide: NgbDateParserFormatter,],\r\n  providers: [DatePipe,{provide: NgbDateParserFormatter, useClass: NgbDateFRParserFormatter}],\r\n  declarations: [AppComponent, HeaderComponent, AddComponent, ViewComponent, UpdateComponent, FindTaskByIdPipe,FindTaskByTaskPipe],\r\n  bootstrap:[AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { RouterModule, Routes } from '@angular/router';\r\nimport { ViewComponent } from './task/view/view.component';\r\nimport { AddComponent } from './task/add/add.component';\r\nimport { UpdateComponent } from './task/update/update.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    {path: 'view', component: ViewComponent},\r\n    {path: 'add', component: AddComponent},\r\n    {path: 'update', component: UpdateComponent},\r\n    {path: '**', pathMatch:'full', redirectTo: '/view'}\r\n    // {path: '**', pathMatch:'full', component: NotFoundComponent}\r\n  ]\r\n  \r\nexport const routing = RouterModule.forRoot(routes);","module.exports = \"section#main{\\r\\n    margin-top: 70px;\\r\\n}\\r\\n\\r\\nfooter{\\r\\n    background-color: #007bff;\\r\\n    padding: 15px;\\r\\n    text-align: center;\\r\\n    \\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwL2FwcC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksaUJBQWlCO0NBQ3BCOztBQUVEO0lBQ0ksMEJBQTBCO0lBQzFCLGNBQWM7SUFDZCxtQkFBbUI7O0NBRXRCIiwiZmlsZSI6InNyYy9hcHAvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsic2VjdGlvbiNtYWlue1xyXG4gICAgbWFyZ2luLXRvcDogNzBweDtcclxufVxyXG5cclxuZm9vdGVye1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2JmZjtcclxuICAgIHBhZGRpbmc6IDE1cHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBcclxufVxyXG4iXX0= */\"","module.exports = \"<app-header></app-header>\\r\\n<section id=\\\"main\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <router-outlet></router-outlet>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\\r\\n<footer>\\r\\n    copyright &copy; 2018\\r\\n</footer>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {NgbDateAdapter,NgbDateParserFormatter, NgbDateStruct, NgbDateNativeAdapter} from '@ng-bootstrap/ng-bootstrap';\r\n\r\nfunction padNumber(value: number) {\r\n    if (isNumber(value)) {\r\n        return `0${value}`.slice(-2);\r\n    } else {\r\n        return \"\";\r\n    }\r\n}\r\n\r\nfunction isNumber(value: any): boolean {\r\n    return !isNaN(toInteger(value));\r\n}\r\n\r\nfunction toInteger(value: any): number {\r\n    return parseInt(`${value}`, 10);\r\n}\r\n\r\n\r\n@Injectable()\r\nexport class NgbDateFRParserFormatter extends NgbDateParserFormatter {\r\n    parse(value: string): NgbDateStruct {\r\n        if (value) {\r\n            const dateParts = value.trim().split('/');\r\n            if (dateParts.length === 1 && isNumber(dateParts[0])) {\r\n                return {year: toInteger(dateParts[0]), month: null, day: null};\r\n            } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\r\n                return {year: toInteger(dateParts[1]), month: toInteger(dateParts[0]), day: null};\r\n            } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\r\n                return {year: toInteger(dateParts[2]), month: toInteger(dateParts[1]), day: toInteger(dateParts[0])};\r\n            }\r\n        }   \r\n        return null;\r\n    }\r\n\r\n    format(date: NgbDateStruct): string {\r\n        let stringDate: string = \"\"; \r\n        if(date) {\r\n            stringDate += isNumber(date.day) ? padNumber(date.day) + \"/\" : \"\";\r\n            stringDate += isNumber(date.month) ? padNumber(date.month) + \"/\" : \"\";\r\n            stringDate += date.year;\r\n        }\r\n        return stringDate;\r\n    }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'findTaskById'\r\n})\r\nexport class FindTaskByIdPipe implements PipeTransform {\r\n\r\n  transform(taskId: any, tasks?: any): any {\r\n    let foundTask = tasks.filter(task=>task._id == taskId)[0];\r\n    return !!foundTask ? foundTask.task : '-' ;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Task } from '../app/task/model/Task';\r\nimport { provideForRootGuard } from '@angular/router/src/router_module';\r\n\r\n\r\n@Pipe({\r\n  name: 'filterbyTask'\r\n})\r\n\r\nexport class FindTaskByTaskPipe implements PipeTransform  {\r\n  transform(tasks: any[],\r\n            taskName: string,\r\n            priFrom: number,\r\n            priTo: number ,\r\n            searchParent: string,\r\n            searchStartdate: any,\r\n            searchEnddate: any\r\n    ): any {\r\n  \r\n    if (!tasks) return [];\r\n\r\n    let parenttaskid;\r\n    let startdate:any;\r\n    let enddate:any;\r\n    let strStartDate:string;\r\n    let strEndDate:string;\r\n    let dbFromdate:any ;\r\n    let dbEnddate:any ;\r\n  \r\n    //Get the task id of the search parent\r\n    for (let i=0;i<tasks.length;i++){\r\n      if (tasks[i].task.toLowerCase() == searchParent.toLowerCase()){\r\n        parenttaskid=tasks[i]._id;\r\n      }\r\n    }\r\n    \r\n\r\n    return tasks.filter( it => {\r\n       \r\n    dbFromdate = this.dateconversion(it.start_date);\r\n    dbEnddate = this.dateconversion(it.End_Date);\r\n   \r\n    if (priFrom || priTo) \r\n    {\r\n      if (( it.Priority < priFrom) || (it.Priority > priTo)) {\r\n          return false;\r\n      } \r\n    } \r\n      \r\n    if (taskName && it.task.toLowerCase().indexOf(taskName.toLowerCase()) === -1) \r\n    {\r\n      return false;\r\n    }\r\n\r\n      //next condition\r\n    if (searchParent && it.parent != parenttaskid)\r\n    {\r\n      return false;\r\n    }\r\n\r\n    \r\n      //next condition\r\n    if (searchStartdate)\r\n     {\r\n      strStartDate = `${searchStartdate.year}/${searchStartdate.month}/${searchStartdate.day}`;\r\n      if (dbFromdate.indexOf(strStartDate) === -1 ){\r\n          return false;\r\n      }\r\n     }\r\n\r\n     if (searchEnddate)\r\n     {\r\n      strEndDate = `${searchEnddate.year}/${searchEnddate.month}/${searchEnddate.day}`;\r\n      if (dbEnddate.indexOf(strEndDate) === -1 ){\r\n          return false;\r\n      }\r\n     }\r\n    \r\n\r\n      return true;\r\n\r\n    } )\r\n}\r\n\r\nisNumber(value: any): boolean {\r\n  return !isNaN(this.toInteger(value));\r\n}\r\n\r\ntoInteger(value: any): number {\r\n  return parseInt(`${value}`, 10);\r\n}\r\n\r\ndateconversion(value:any){\r\n  if (value) {\r\n      const dateParts = value.trim().split('-');\r\n      let x = {year: this.toInteger(dateParts[0]), \r\n              month: this.toInteger(dateParts[1]), \r\n              day: this.toInteger(dateParts[2])};\r\n      return (`${x.year}/${x.month}/${x.day}`);\r\n  }   \r\n  return null;\r\n}\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<header>\\r\\n  <!-- <a class=\\\"btn btn-secondary\\\" [routerLink]=\\\"['login']\\\">Login</a> |\\r\\n  <a [routerLink]=\\\"['signup']\\\">Signup</a> |\\r\\n  <a [routerLink]=\\\"['account', 'vikas']\\\">Account</a> | -->\\r\\n  <!-- <a [routerLink]=\\\"/account/vikas\\\">Account</a> | -->\\r\\n\\r\\n\\r\\n  <nav class=\\\"navbar navbar-expand-md navbar-dark bg-primary fixed-top\\\">\\r\\n    <a class=\\\"navbar-brand\\\" [routerLink]=\\\"\\\">Task Manager</a>\\r\\n    <button class=\\\"navbar-toggler hidden-sm-up\\\" type=\\\"button\\\" (click)=\\\"isNavbarCollapsed = !isNavbarCollapsed\\\" data-target=\\\"#navbarsDefault\\\" aria-controls=\\\"navbarsDefault\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n    <div [ngbCollapse]=\\\"isNavbarCollapsed\\\" class=\\\"collapse navbar-collapse\\\" id=\\\"navbarsDefault\\\">\\r\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n        <!-- <li class=\\\"nav-item dropdown\\\" ngbDropdown>\\r\\n          <a class=\\\"nav-link dropdown-toggle\\\" id=\\\"id01\\\" ngbDropdownToggle>DropDwon</a>\\r\\n          <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"id01\\\" ngbDropdownMenu>\\r\\n            <a class=\\\"dropdown-item\\\" href=\\\"#\\\">DD1</a>\\r\\n            <a class=\\\"dropdown-item\\\" href=\\\"#\\\">DD2</a>\\r\\n            <a class=\\\"dropdown-item\\\" href=\\\"#\\\">DD3</a>\\r\\n          </div>\\r\\n        </li> -->\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['view']\\\">View Task</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['add']\\\">Add Task</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </nav>\\r\\n</header>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  isNavbarCollapsed=true;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rhc2svYWRkL2FkZC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\r\\n<div class=\\\"col-md-6 offset-md-3\\\">\\r\\n  \\r\\n  <div class=\\\"form-group row\\\">\\r\\n  <label for=\\\"task\\\" class=\\\"col-sm-3 col-form-label\\\">Task</label>\\r\\n  <div class=\\\"col-sm-6\\\">\\r\\n  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"task\\\"   placeholder=\\\"Task Name\\\" [(ngModel)]=\\\"task.task\\\" name=\\\"task\\\" #taskName=\\\"ngModel\\\"  required />\\r\\n  <div *ngIf=\\\"taskName.errors && (taskName.dirty || taskName.touched || submitted)\\\" class=\\\"alert alert-danger\\\">\\r\\n      <div [hidden]=\\\"!taskName.errors.required\\\">\\r\\n          Please enter the task name\\r\\n      </div>\\r\\n  </div>\\r\\n  </div> \\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group row\\\">\\r\\n    <label for=\\\"priority\\\" class=\\\"col-sm-3 col-form-label\\\">Priority</label>\\r\\n        <label class=\\\"col-sm-1 col-form-label\\\">0</label>\\r\\n    <div class=\\\"col-sm-5\\\">\\r\\n      <input type=\\\"range\\\" class=\\\"form-control\\\" #priority id=\\\"priority\\\" min=\\\"0\\\" max=\\\"30\\\" [(ngModel)]=\\\"task.Priority\\\" />\\r\\n    </div>\\r\\n    <label class=\\\"col-sm-1 col-form-label\\\">30</label>\\r\\n    <label for=\\\"priority\\\" class=\\\"col-sm-1 offset-sm-1 col-form-label\\\">{{task.Priority || 0}}</label>\\r\\n    \\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"form-group row\\\">\\r\\n    <label for=\\\"parentTask\\\" class=\\\"col-sm-3 col-form-label\\\">Parent Task</label>\\r\\n    <div class=\\\"col-sm-9\\\">\\r\\n      <ng-template #rt let-r=\\\"result.task\\\" let-t=\\\"term\\\">\\r\\n        <ngb-highlight [result]=\\\"r\\\" [term]=\\\"t\\\"></ngb-highlight>\\r\\n      </ng-template>\\r\\n      <input id=\\\"typeahead-template\\\" type=\\\"text\\\" class=\\\"form-control\\\" \\r\\n        [(ngModel)]=\\\"selectedParent\\\" [ngbTypeahead]=\\\"search\\\" [resultTemplate]=\\\"rt\\\" \\r\\n          [inputFormatter]=\\\"formatter\\\" />\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div class=\\\"form-group row\\\">\\r\\n    <label for=\\\"start_date\\\" class=\\\"col-sm-3 col-form-label\\\">Start Date</label>\\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"startDate\\\" (focus)=\\\"start_date.open()\\\" ngbDatepicker \\r\\n          #start_date=\\\"ngbDatepicker\\\" #myStartDate=\\\"ngModel\\\" id=\\\"start_date\\\" [(ngModel)]=\\\"starting_date\\\" required >    \\r\\n          <div *ngIf=\\\"myStartDate.errors && (myStartDate.dirty || myStartDate.touched || submitted)\\\" class=\\\"alert alert-danger\\\">\\r\\n              <div >\\r\\n                  Please select start date\\r\\n              </div>\\r\\n          </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"end_date\\\" class=\\\"col-sm-3 col-form-label\\\">End Date</label>\\r\\n      <div class=\\\"col-sm-6\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"endDate\\\" (focus)=\\\"end_date.open()\\\" ngbDatepicker \\r\\n            #end_date=\\\"ngbDatepicker\\\" id=\\\"end_date\\\" #myEndDate=\\\"ngModel\\\" [(ngModel)]=\\\"ending_date\\\" required >\\r\\n            <div *ngIf=\\\"myEndDate.errors && (myEndDate.dirty || myEndDate.touched || submitted)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div >\\r\\n                    Please select end date\\r\\n                </div>\\r\\n            </div>\\r\\n          </div>\\r\\n    </div>\\r\\n  <div class=\\\"form-group row\\\">\\r\\n    <div class=\\\"col-sm-3 offset-sm-3\\\">\\r\\n      <button class=\\\"btn btn-default btn-block\\\" id=\\\"add-task\\\" (click)=\\\"addTask()\\\" >Add Task</button>\\r\\n      <div class=\\\"required-field\\\"> {{errmsg}}</div>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-3\\\">\\r\\n      <button class=\\\"btn btn-default btn-block\\\" name=\\\"reset-task\\\" (click)=\\\"resetTask()\\\">Reset</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Task } from './../model/Task';\r\nimport { TaskService } from '../task.service';\r\nimport { Router } from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {debounceTime, map} from 'rxjs/operators';\r\nimport { isNullOrUndefined, isUndefined } from 'util';\r\n\r\n@Component({\r\n  selector: 'app-add',\r\n  templateUrl: './add.component.html',\r\n  styleUrls: ['./add.component.css']\r\n})\r\nexport class AddComponent implements OnInit {\r\n\r\n  task: Task = new Task();\r\n  starting_date:any = {};\r\n  ending_date:any = {};\r\n\r\n  parents:{_id:string, task:string}[];\r\n\r\n  search:any;\r\n  formatter:any;\r\n  displayerr:boolean;\r\n  errmsg:string;\r\n\r\n  selectedParent:{_id:string, task:string} = null;\r\n  constructor(private taskService: TaskService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.ngBootstrapTypeahead();\r\n    \r\n    // find all the parent ids and tasks\r\n    this.findAllTasks();\r\n    this.task.task = '';\r\n    this.displayerr=false;  \r\n    this.clearerrmsg();\r\n  \r\n  }\r\n  \r\n  ngBootstrapTypeahead(){\r\n    this.search = (text$: Observable<string>) =>\r\n    text$.pipe(\r\n      debounceTime(200),\r\n      map(term => term === '' ? []\r\n      : this.parents.filter(parent => parent.task.toLowerCase().indexOf(term.toLowerCase()) > -1).slice(0, 10))\r\n    );\r\n    \r\n    this.formatter = (x: {task: string}) => {\r\n      // // console.log(x);\r\n      return x.task;\r\n    };  \r\n    \r\n  }\r\n  \r\n  findAllTasks(){\r\n    this.taskService.getAllTasks()\r\n    .subscribe((res: any)=>{\r\n      // console.log(res);\r\n      if(res.success == true){\r\n        this.parents = res.data;\r\n      } else {\r\n        // console.log(\"error in finding all tasks\");\r\n      }\r\n    })\r\n  }\r\n\r\n  changePriority(p){\r\n    // console.log(p);\r\n    this.task.Priority = p;\r\n  }\r\n  clearerrmsg(){\r\n    this.errmsg='';\r\n  }\r\n  resetTask(){\r\n   this.clearerrmsg();\r\n   this.task.Priority = 0;\r\n   this.task.task ='';\r\n   this.task.parent = '';\r\n   this.task.start_date=null;\r\n   this.task.End_Date=null;\r\n   this.ending_date={};\r\n   this.starting_date={};\r\n  }\r\n  validateTask(){\r\n    if (this.task.task === ''){\r\n      this.displayerr=true;\r\n      this.errmsg=\"Please enter the task name\"; \r\n      return false;\r\n    }\r\n  \r\n    if (this.task.Priority === 0){\r\n      this.displayerr=true;\r\n      this.errmsg=\"Please select priority greater than 0\"; \r\n      return false;\r\n    }\r\n\r\n    if (Object.keys(this.starting_date).length === 0)\r\n    {\r\n        this.displayerr=true;\r\n        this.errmsg=\"Please select Start Date\"; \r\n        return false;\r\n    }\r\n   \r\n    if (Object.keys(this.ending_date).length === 0)\r\n    {\r\n        this.displayerr=true;\r\n        this.errmsg=\"Please select End Date\"; \r\n        return false;\r\n    }\r\n     //Add validation for start date and end date to be selected.\r\n    \r\n    if (this.task.start_date && this.task.End_Date){\r\n\r\n      if (this.task.start_date > this.task.End_Date){\r\n        this.displayerr=true;\r\n        this.errmsg=\"End date should be greater than start date\"; \r\n        return false;\r\n      }\r\n\r\n    }\r\n    return true;\r\n  }\r\n\r\n  addTask(){\r\n    this.displayerr=false;\r\n    this.clearerrmsg();\r\n    this.task.End_Date = new Date(`${this.ending_date.year}/${this.ending_date.month}/${this.ending_date.day}`);\r\n    this.task.start_date = new Date(`${this.starting_date.year}/${this.starting_date.month}/${this.starting_date.day}`);\r\n    if(!!this.selectedParent){\r\n      this.task.parent = this.selectedParent._id;\r\n    }\r\n      \r\n    if (this.validateTask){\r\n    this.taskService.createTask(this.task)\r\n    .subscribe((res: any)=>{\r\n      // console.log(res);\r\n      if(res.success == true){\r\n        // console.log('valid')\r\n        this.router.navigate(['/', 'view']);\r\n      } else {\r\n        alert('Invalid user');\r\n      }\r\n    })\r\n  }\r\n  else{\r\n    console.log(\"failed validation\");\r\n  }\r\n\r\n  }\r\n}\r\n","export class Task{\r\n    public _id: string;\r\n    public task: string;\r\n    public parent: string;\r\n    public Priority: number = 0;\r\n    public start_date: Date;\r\n    public End_Date: Date;\r\n    public Finished: boolean = false;\r\n    constructor(){}\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { UtilService } from '../util.service';\r\nimport { Task } from './model/Task';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TaskService {\r\n\r\n  constructor(private http: HttpClient, private util: UtilService) { \r\n    // console.log(this.util.host);\r\n  }\r\n\r\n  getAllTasks(){\r\n    return this.http.get(`${this.util.host}/api/tasks`);\r\n  }\r\n  getTask(taskId){\r\n    return this.http.get(`${this.util.host}/api/tasks/${taskId}`);\r\n  }\r\n  createTask(task){\r\n    return this.http.post(`${this.util.host}/api/tasks`, task);\r\n  }\r\n  updateTask(taskId, task){\r\n    return this.http.put(`${this.util.host}/api/tasks/${taskId}`, task);\r\n  }\r\n  deleteTask(taskId){\r\n    return this.http.delete(`${this.util.host}/api/tasks/${taskId}`);\r\n  }\r\n\r\n  public _id: string;\r\n  public task: string;\r\n  public parent: string;\r\n  public Priority: number ;\r\n  public start_date: Date;\r\n  public End_Date: Date;\r\n  public Finished: boolean ;\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rhc2svdXBkYXRlL3VwZGF0ZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"col-md-6 offset-md-3\\\">\\r\\n\\r\\n  \\r\\n    <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"task\\\" class=\\\"col-sm-3 col-form-label\\\">Task</label>\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"task\\\"   placeholder=\\\"Task Name\\\" [(ngModel)]=\\\"task.task\\\" name=\\\"task\\\" #taskName=\\\"ngModel\\\"  required />\\r\\n        <div *ngIf=\\\"taskName.errors && (taskName.dirty || taskName.touched || submitted)\\\" class=\\\"alert alert-danger\\\">\\r\\n            <div [hidden]=\\\"!taskName.errors.required\\\">\\r\\n                Please enter the task name\\r\\n            </div>\\r\\n        </div>\\r\\n        </div> \\r\\n        </div>\\r\\n\\r\\n  <div class=\\\"form-group row\\\">\\r\\n    <label for=\\\"priority\\\" class=\\\"col-sm-3 col-form-label\\\">Priority</label>\\r\\n        <label class=\\\"col-sm-1 col-form-label\\\">0</label>\\r\\n    <div class=\\\"col-sm-5\\\">\\r\\n      <input type=\\\"range\\\" class=\\\"form-control\\\" #priority id=\\\"priority\\\" min=\\\"0\\\" max=\\\"30\\\" [(ngModel)]=\\\"task.Priority\\\" />\\r\\n    </div>\\r\\n    <label class=\\\"col-sm-1 col-form-label\\\">30</label>\\r\\n    <label for=\\\"priority\\\" class=\\\"col-sm-1 offset-sm-1 col-form-label\\\">{{task.Priority || 0}}</label>\\r\\n    \\r\\n  </div>\\r\\n  <div class=\\\"form-group row\\\">\\r\\n    <label for=\\\"parentTask\\\" class=\\\"col-sm-3 col-form-label\\\">Parent Task</label>\\r\\n    <div class=\\\"col-sm-9\\\">\\r\\n      <ng-template #rt let-r=\\\"result.task\\\" let-t=\\\"term\\\">\\r\\n        <ngb-highlight [result]=\\\"r\\\" [term]=\\\"t\\\"></ngb-highlight>\\r\\n      </ng-template>\\r\\n      <input id=\\\"typeahead-template\\\" type=\\\"text\\\" class=\\\"form-control\\\" \\r\\n        [(ngModel)]=\\\"selectedParent\\\" [ngbTypeahead]=\\\"search\\\" [resultTemplate]=\\\"rt\\\" \\r\\n          [inputFormatter]=\\\"formatter\\\" />\\r\\n    </div>\\r\\n  </div>\\r\\n<div class=\\\"form-group row\\\">\\r\\n    <label for=\\\"start_date\\\" class=\\\"col-sm-3 col-form-label\\\">Start Date</label>\\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"startDate\\\" (focus)=\\\"start_date.open()\\\" ngbDatepicker \\r\\n          #start_date=\\\"ngbDatepicker\\\" #myStartDate=\\\"ngModel\\\" id=\\\"start_date\\\" [(ngModel)]=\\\"starting_date\\\" required >    \\r\\n          <div *ngIf=\\\"myStartDate.errors && (myStartDate.dirty || myStartDate.touched || submitted)\\\" class=\\\"alert alert-danger\\\">\\r\\n              <div >\\r\\n                  Please select start date\\r\\n              </div>\\r\\n          </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"end_date\\\" class=\\\"col-sm-3 col-form-label\\\">End Date</label>\\r\\n      <div class=\\\"col-sm-6\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"endDate\\\" (focus)=\\\"end_date.open()\\\" ngbDatepicker \\r\\n            #end_date=\\\"ngbDatepicker\\\" id=\\\"end_date\\\" #myEndDate=\\\"ngModel\\\" [(ngModel)]=\\\"ending_date\\\" required >\\r\\n            <div *ngIf=\\\"myEndDate.errors && (myEndDate.dirty || myEndDate.touched || submitted)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div >\\r\\n                    Please select end date\\r\\n                </div>\\r\\n            </div>\\r\\n          </div>\\r\\n    </div>\\r\\n  <div class=\\\"form-group row\\\">\\r\\n    <div class=\\\"col-sm-3 offset-sm-3\\\">\\r\\n      <button class=\\\"btn btn-default btn-block\\\" (click)=\\\"updateTask()\\\">Update Task</button>\\r\\n      <div class=\\\"required-field\\\"> {{errmsg}}</div>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-3\\\">\\r\\n      <button class=\\\"btn btn-default btn-block\\\" (click)=\\\"cancelTask()\\\">Cancel</button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\"","import { Component, OnInit,Input } from '@angular/core';\r\nimport { Task } from './../model/Task';\r\nimport { TaskService } from '../task.service';\r\nimport { Router } from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {debounceTime, map} from 'rxjs/operators';\r\nimport { DatePipe } from '@angular/common';\r\n//import { NgbDateFRParserFormatter} from '../../convert-date.pipe'\r\n\r\n\r\n@Component({\r\n  selector: 'app-update',\r\n  templateUrl: './update.component.html',\r\n  styleUrls: ['./update.component.css']\r\n})\r\nexport class UpdateComponent implements OnInit {\r\n\r\n  task: Task = new Task();\r\n  parents: {id:string,task:string}[];\r\n  search:any;\r\n  formatter:any;\r\n  displayerr:boolean;\r\n  errmsg:string;\r\n\r\n  starting_date:any = {};\r\n  ending_date:any = {};\r\n  selectedParent: {_id:string, task:string};\r\n  mydate;\r\n  datestring:any;\r\n\r\n  constructor(private taskService: TaskService,private router: Router,public datepipe: DatePipe) {\r\n   }\r\n  \r\n  ngOnInit() {\r\n    this.ngBootstrapTypeahead();\r\n    this.findAllTasks();\r\n    this.displayerr = false;\r\n    this.errmsg = '';\r\n    this.task.task = this.taskService.task;\r\n    this.task._id = this.taskService._id;\r\n    this.task.Priority = this.taskService.Priority;\r\n    this.task.parent=this.taskService.parent;\r\n    this.starting_date = this.taskService.start_date ;\r\n    this.ending_date = this.taskService.End_Date;\r\n    this.task.End_Date = this.starting_date;\r\n    this.task.start_date = this.ending_date;\r\n    this.findTaskbyID(this.taskService.parent);\r\n    this.starting_date = this.dateconversion(this.starting_date);\r\n    this.ending_date = this.dateconversion(this.ending_date);\r\n  }\r\n\r\n\r\n  ngBootstrapTypeahead(){\r\n    this.search = (text$: Observable<string>) =>\r\n    text$.pipe(\r\n      debounceTime(200),\r\n      map(term => term === '' ? []\r\n      : this.parents.filter(parent => parent.task.toLowerCase().indexOf(term.toLowerCase()) > -1).slice(0, 10))\r\n    );\r\n    \r\n    this.formatter = (x: {task: string}) => {\r\n\r\n      return x.task;\r\n    };  \r\n    \r\n  }\r\n\r\n  findAllTasks(){\r\n    this.taskService.getAllTasks()\r\n    .subscribe((res: any)=>{\r\n      // console.log(res);\r\n      if(res.success == true){\r\n        this.parents = res.data;\r\n      } else {\r\n        // console.log(\"error in finding all tasks\");\r\n      }\r\n    })\r\n  }\r\n\r\n  cancelTask(){\r\n    this.router.navigate(['/', 'view']);\r\n  }\r\n\r\n isNumber(value: any): boolean {\r\n    return !isNaN(this.toInteger(value));\r\n}\r\n\r\n toInteger(value: any): number {\r\n    return parseInt(`${value}`, 10);\r\n}\r\n\r\n  dateconversion(value:any){\r\n      if (value) {\r\n          const dateParts = value.trim().split('-');\r\n          return {year: this.toInteger(dateParts[0]), \r\n                  month: this.toInteger(dateParts[1]), \r\n                  day: this.toInteger(dateParts[2])};\r\n      }   \r\n      return null;\r\n  }\r\n\r\n\r\n\r\n  findTaskbyID(taskid:string){\r\n    this.taskService.getTask(taskid)\r\n    .subscribe((res: any)=>{\r\n       console.log(res);\r\n      if(res.success == true){\r\n        this.selectedParent = res.data;\r\n      } else {\r\n        // console.log(\"error in finding all tasks\");\r\n      }\r\n    })\r\n  }\r\n  updateTask(){\r\n    this.displayerr=false;\r\n    this.task.End_Date = new Date(`${this.ending_date.year}/${this.ending_date.month}/${this.ending_date.day}`);\r\n    this.task.start_date = new Date(`${this.starting_date.year}/${this.starting_date.month}/${this.starting_date.day}`);\r\n\r\n    if (this.task.task === ''){\r\n      this.displayerr=true;\r\n      this.errmsg=\"Please enter the task name\"; \r\n      return;\r\n    }\r\n    \r\n    if (this.task.Priority === 0){\r\n      this.displayerr=true;\r\n      this.errmsg=\"Please select priority greater than 0\"; \r\n      return;\r\n    }\r\n\r\n    if (Object.keys(this.starting_date).length === 0)\r\n    {\r\n        this.displayerr=true;\r\n        this.errmsg=\"Please select Start Date\"; \r\n        return;\r\n    }\r\n   \r\n    if (Object.keys(this.ending_date).length === 0)\r\n    {\r\n        this.displayerr=true;\r\n        this.errmsg=\"Please select End Date\"; \r\n        return;\r\n    }\r\n     //Add validation for start date and end date to be selected.\r\n    \r\n    if (this.task.start_date && this.task.End_Date){\r\n\r\n      if (this.task.start_date > this.task.End_Date){\r\n        this.displayerr=true;\r\n        this.errmsg=\"End date should be greater than start date\"; \r\n        return;\r\n      }\r\n    }\r\n\r\n    if(!!this.selectedParent){\r\n      this.task.parent = this.selectedParent._id;\r\n    }\r\n\r\n    if(!this.displayerr){\r\n    this.taskService.updateTask(this.task._id,this.task)\r\n    .subscribe((res: any)=>{\r\n      // console.log(res);\r\n      if(res.success == true){\r\n        // console.log('valid')\r\n        this.router.navigate(['/', 'view']);\r\n      } else {\r\n        alert('Invalid user');\r\n      }\r\n    })\r\n  }\r\n\r\n  }\r\n}\r\n","module.exports = \"hr#afterSearchView{\\r\\n    border: 1px dashed dimgrey;\\r\\n}\\r\\n\\r\\n\\r\\ntd#taskCell, td#parentTaskCell{\\r\\n    min-width: 100px;\\r\\n}\\r\\n\\r\\n\\r\\ntd#priorityCell{\\r\\n    min-width: 20px;\\r\\n}\\r\\n\\r\\n\\r\\ntd.dateCell, td.app-btn{\\r\\n    min-width: 40px;\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGFzay92aWV3L3ZpZXcuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLDJCQUEyQjtDQUM5Qjs7O0FBR0Q7SUFDSSxpQkFBaUI7Q0FDcEI7OztBQUVEO0lBQ0ksZ0JBQWdCO0NBQ25COzs7QUFFRDtJQUNJLGdCQUFnQjtDQUNuQiIsImZpbGUiOiJzcmMvYXBwL3Rhc2svdmlldy92aWV3LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJociNhZnRlclNlYXJjaFZpZXd7XHJcbiAgICBib3JkZXI6IDFweCBkYXNoZWQgZGltZ3JleTtcclxufVxyXG5cclxuXHJcbnRkI3Rhc2tDZWxsLCB0ZCNwYXJlbnRUYXNrQ2VsbHtcclxuICAgIG1pbi13aWR0aDogMTAwcHg7XHJcbn1cclxuXHJcbnRkI3ByaW9yaXR5Q2VsbHtcclxuICAgIG1pbi13aWR0aDogMjBweDtcclxufVxyXG5cclxudGQuZGF0ZUNlbGwsIHRkLmFwcC1idG57XHJcbiAgICBtaW4td2lkdGg6IDQwcHg7XHJcbn1cclxuXHJcbiJdfQ== */\"","module.exports = \"<div class=\\\"form-row\\\">\\r\\n  <div class=\\\"form-group col-md-6\\\">\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"task\\\" class=\\\"col-sm-3 col-form-label\\\">Task:</label>\\r\\n      <div class=\\\"col-sm-9\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"task\\\" [(ngModel)]=\\\"searchText\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"form-group col-md-6\\\">\\r\\n\\r\\n   <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"parent_task\\\" class=\\\"col-sm-3 col-form-label\\\">Parent Task:</label>\\r\\n      <div class=\\\"col-sm-9\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"parent_task\\\" [(ngModel)]=\\\"searchParent\\\">\\r\\n      </div>\\r\\n    </div> \\r\\n  </div>\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <div class=\\\"form-group col-md-3\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"priorityFrom\\\" class=\\\"col-sm-6 col-form-label\\\">Priority From:</label>\\r\\n          <div class=\\\"col-sm-6\\\">\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"priorityFrom\\\" [(ngModel)]=\\\"searchPrioFrom\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-md-3\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"priorityTo\\\" class=\\\"col-sm-6 col-form-label\\\">Priority To:</label>\\r\\n          <div class=\\\"col-sm-6\\\">\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"priorityTo\\\" [(ngModel)]=\\\"searchPrioTo\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n     <!-- <div class=\\\"form-group col-md-3\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"startDate\\\" class=\\\"col-sm-6 col-form-label\\\">Start Date:</label>\\r\\n          <div class=\\\"col-sm-6\\\">\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"startDate\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>-->\\r\\n\\r\\n      <!--<div class=\\\"form-group col-md-3\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"endDate\\\" class=\\\"col-sm-6 col-form-label\\\">End Date:</label>\\r\\n          <div class=\\\"col-sm-6\\\">\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"endDate\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>-->\\r\\n\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"start_date\\\" class=\\\"col-sm-3 col-form-label\\\">Start Date</label>\\r\\n        <div class=\\\"col-sm-9\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" (focus)=\\\"start_date.open()\\\" ngbDatepicker #start_date=\\\"ngbDatepicker\\\" \\r\\n            id=\\\"start_date\\\" [(ngModel)]=\\\"searchstartdate\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"end_date\\\" class=\\\"col-sm-3 col-form-label\\\">End Date</label>\\r\\n        <div class=\\\"col-sm-9\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" (focus)=\\\"end_date.open()\\\" ngbDatepicker #end_date=\\\"ngbDatepicker\\\" \\r\\n            id=\\\"end_date\\\" [(ngModel)]=\\\"searchenddate\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n<hr id=\\\"afterSearchView\\\" />\\r\\n\\r\\n<br/>\\r\\n\\r\\n<div class=\\\"table-responsive\\\">\\r\\n  <table class=\\\"table\\\">\\r\\n    <tr *ngFor=\\\"let task of tasks | filterbyTask:searchText:searchPrioFrom:searchPrioTo:searchParent:searchstartdate:searchenddate \\\">\\r\\n      <td id=\\\"taskCell\\\">\\r\\n        <b>Task</b>\\r\\n        <br/>{{task.task }}</td>\\r\\n      <td id=\\\"parentTaskCell\\\">\\r\\n        <b>Parent Task</b>\\r\\n        <br/>{{task.parent | findTaskById:tasks}}</td>\\r\\n      <td id=\\\"priorityCell\\\">\\r\\n        <b>Priority</b>\\r\\n        <br/>{{task.Priority}}</td>\\r\\n      <td class=\\\"dateCell\\\">\\r\\n        <b>Start Date</b>\\r\\n        <br/>{{task.start_date | date:\\\"dd-MMM-yyyy\\\"}}</td>\\r\\n      <td class=\\\"dateCell\\\">\\r\\n        <b>End Date</b>\\r\\n        <br/>{{task.End_Date | date:\\\"dd-MMM-yyyy\\\"}}</td>\\r\\n        <td class=\\\"dateCell\\\">\\r\\n          <b>Finished</b>\\r\\n          <br/>{{task.Finished}}</td>\\r\\n        <td class=\\\"app-btn\\\">\\r\\n        <button class=\\\"btn btn-default btn-block\\\" [disabled]= \\\"task.Finished\\\" (click)=\\\"editTask(task)\\\">Edit</button>\\r\\n      </td>\\r\\n      <td class=\\\"app-btn\\\">\\r\\n        <button class=\\\"btn btn-default btn-block\\\" [disabled]= \\\"task.Finished\\\" (click)=\\\"endTask(task)\\\">End Task</button>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </table>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { TaskService } from '../task.service';\r\nimport { Task } from '../model/Task';\r\nimport { Router } from '@angular/router';\r\nimport { DatePipe } from '@angular/common';\r\nimport {Observable} from 'rxjs';\r\nimport {debounceTime, map} from 'rxjs/operators';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-view',\r\n  templateUrl: './view.component.html',\r\n  styleUrls: ['./view.component.css']\r\n})\r\nexport class ViewComponent implements OnInit {\r\n  tasks:Task[];\r\n  searchText:string;\r\n  searchParent:string;\r\n  mydate;\r\n  searchPrioFrom:number;\r\n  searchPrioTo:number;\r\n  parents:{_id:string, task:string}[];\r\n  selectedParent:{_id:string, task:string} = null;\r\n  search:any;\r\n  formatter:any;\r\n  \r\n  //create a object to store the selected task\r\n   constructor(private taskService:TaskService,private router: Router,public datepipe: DatePipe) { }\r\n\r\n  ngOnInit() {\r\n    this.ngBootstrapTypeahead()\r\n    this.findAllTasks()\r\n    //this.searchPrioFrom = 0;\r\n    //this.searchPrioTo = 30;\r\n    this.searchText='';\r\n    this.searchParent='';\r\n  }\r\n\r\n  editTask(task1:Task)\r\n  {\r\n    //this.taskService.TaskModel.task=task1.task;\r\n    this.taskService._id=task1._id;\r\n    this.taskService.task=task1.task;\r\n    this.taskService.parent=task1.parent;\r\n    this.taskService.Priority=task1.Priority;\r\n    this.taskService.start_date= task1.start_date;\r\n\r\n    //this.taskService.start_date='2014-01-25';\r\n   \r\n    this.taskService.End_Date=task1.End_Date;\r\n    this.taskService.Finished=task1.Finished;\r\n    this.router.navigate(['/', 'update']);\r\n  }\r\n  endTask(task1:Task)\r\n  {\r\n    task1.Finished=true;\r\n    this.taskService.updateTask(task1._id,task1)\r\n    .subscribe((res: any)=>{\r\n      // console.log(res);\r\n      if(res.success == true){\r\n        // console.log('valid')\r\n        this.router.navigate(['/', 'view']);\r\n      } else {\r\n        alert('Invalid user');\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  ngBootstrapTypeahead(){\r\n    this.search = (text$: Observable<string>) =>\r\n    text$.pipe(\r\n      debounceTime(200),\r\n      map(term => term === '' ? []\r\n      : this.parents.filter(parent => parent.task.toLowerCase().indexOf(term.toLowerCase()) > -1).slice(0, 10))\r\n    );\r\n    \r\n    this.formatter = (x: {task: string}) => {\r\n      // // console.log(x);\r\n      return x.task;\r\n    };  \r\n    \r\n  }\r\n\r\n  findAllTasks(){\r\n    this.taskService.getAllTasks()\r\n    .subscribe((res: any)=>{\r\n      console.log(res);\r\n      if(res.success == true){\r\n        this.tasks = res.data;\r\n        this.parents = res.data;\r\n      } else {\r\n        console.log(\"Could not find all tasks\");\r\n      }\r\n    })\r\n  }\r\n\r\n  dateconversion(x:any){\r\n    this.mydate= new Date(x);\r\n    let latest_date = this.datepipe.transform(this.mydate,'yyyy-MM-dd');\r\n    return latest_date;\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UtilService {\r\n  host:string = \"http://localhost:3636\";\r\n  constructor() { }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}